{
  "category": "hero",
  "components": [
    {
      "name": "HeroSplitWithMedia",
      "path": "src\\blocks\\hero\\HeroSplitWithMedia.tsx",
      "dependencies": {
        "imports": [],
        "packages": [
          "@/components/ui/button"
        ]
      },
      "content": {
        "title": "Transform Your Workflow",
        "description": "Streamline your development process with our powerful tools and components.",
        "buttons": [
          {
            "id": "button1",
            "text": "Try Now",
            "variant": "default"
          },
          {
            "id": "button2",
            "text": "View Demo",
            "variant": "outline"
          }
        ],
        "image": {
          "src": "https://placehold.co/400/?text=Hero Image",
          "alt": "Hero Image",
          "className": "w-full h-full object-cover rounded-lg"
        }
      },
      "sourceCode": "import { Button, type ButtonProps } from \"@/components/ui/button\";\r\n\r\ntype Content = {\r\n  title: string;\r\n  description: string;\r\n  buttons?: (ButtonProps & {\r\n    id: string;\r\n    text: string;\r\n    icon?: React.ReactNode;\r\n  })[];\r\n    image: {\r\n        src: string;\r\n        alt: string;\r\n        className: string;\r\n    };\r\n};\r\n\r\nconst content: Content = {\r\n    title: \"Transform Your Workflow\",\r\n    description: \"Streamline your development process with our powerful tools and components.\",\r\n    buttons: [\r\n        { id: \"button1\", text: \"Try Now\", variant: \"default\" },\r\n        { id: \"button2\", text: \"View Demo\", variant: \"outline\" }\r\n    ],\r\n    image: {\r\n        src: \"https://placehold.co/400/?text=Hero Image\",\r\n        alt: \"Hero Image\",\r\n        className: \"w-full h-full object-cover rounded-lg\"\r\n    }\r\n} as const;\r\n\r\ntype HeroSplitWithMediaProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>;\r\n\r\nexport const HeroSplitWithMedia = (props: HeroSplitWithMediaProps) => {\r\n    const { title, description, buttons, image } = {\r\n        ...content,\r\n        ...props\r\n    };\r\n\r\n    return (\r\n        <section className=\"w-full py-16 lg:py-32\">\r\n            <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\r\n                <div className=\"flex flex-col items-start space-y-4\">\r\n                    <h2 className=\"text-3xl md:text-4xl lg:text-5xl font-bold\">\r\n                        {title}\r\n                    </h2>\r\n                    <p className=\"text-lg\">\r\n                        {description}\r\n                    </p>\r\n                    <div className=\"flex gap-4\">\r\n                        {buttons?.map((button) => (\r\n                            <Button key={button.id} variant={button.variant} size={button.size} className={button.className}>\r\n                                {button.text}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"aspect-square rounded bg-muted\">\r\n                    <img src={image.src} alt={image.alt} className={image.className} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n)};"
    },
    {
      "name": "HeroSplitWithGallery",
      "path": "src\\blocks\\hero\\HeroSplitWithGallery.tsx",
      "dependencies": {
        "imports": [],
        "packages": [
          "lucide-react",
          "@/components/ui/badge",
          "@/components/ui/button"
        ]
      },
      "content": {
        "badge": {
          "text": "We're building",
          "variant": "outline",
          "className": "text-sm font-medium"
        },
        "title": "Build with shadcn ui components",
        "description": "Beautifully designed components built with Radix UI and Tailwind CSS. Open source and free to use in your applications.",
        "buttons": [
          {
            "id": "button1",
            "text": "Documentation",
            "variant": "default",
            "size": "lg",
            "className": "items-center gap-2",
            "icon": {
              "type": "Component",
              "name": "BookOpen"
            }
          },
          {
            "id": "button2",
            "text": "GitHub",
            "variant": "outline",
            "size": "lg",
            "className": "items-center gap-2",
            "icon": {
              "type": "Component",
              "name": "Github"
            }
          }
        ],
        "images": {
          "grid": {
            "className": "grid grid-cols-2 gap-8",
            "items": [
              {
                "id": "image1",
                "src": "https://placehold.co/600x400",
                "className": "bg-muted rounded-md aspect-square"
              },
              {
                "id": "image2",
                "src": "https://placehold.co/600x400",
                "className": "bg-muted rounded-md row-span-2"
              },
              {
                "id": "image3",
                "src": "https://placehold.co/600x400",
                "className": "bg-muted rounded-md aspect-square"
              }
            ]
          }
        }
      },
      "sourceCode": "import { BookOpen, Github } from \"lucide-react\";\r\nimport { Badge, type BadgeProps } from \"@/components/ui/badge\";\r\nimport { Button, type ButtonProps } from \"@/components/ui/button\";\r\n\r\ntype Content = {\r\n  badge?: BadgeProps & {\r\n    text: string;\r\n  };\r\n  title: string;\r\n  description: string;\r\n  buttons?: (ButtonProps & {\r\n    id: string;\r\n    text: string;\r\n    icon?: React.ReactNode;\r\n  })[];\r\n  images: {\r\n    grid: {\r\n      className: string;\r\n      items: {\r\n        id: string;\r\n        src: string;\r\n        className: string;\r\n      }[];\r\n    };\r\n  };\r\n};\r\n\r\nconst content: Content = {\r\n  badge: {\r\n    text: \"We're building\",\r\n    variant: \"outline\",\r\n    className: \"text-sm font-medium\"\r\n  },\r\n  title: \"Build with shadcn ui components\",\r\n  description: \"Beautifully designed components built with Radix UI and Tailwind CSS. Open source and free to use in your applications.\",\r\n  buttons: [\r\n    {\r\n      id: \"button1\",\r\n      text: \"Documentation\",\r\n      variant: \"default\",\r\n      size: \"lg\",\r\n      className: \"items-center gap-2\",\r\n      icon: <BookOpen />\r\n    },\r\n    {\r\n      id: \"button2\",\r\n      text: \"GitHub\",\r\n      variant: \"outline\",\r\n      size: \"lg\",\r\n      className: \"items-center gap-2\",\r\n      icon: <Github />\r\n    }\r\n  ],\r\n  images: {\r\n    grid: {\r\n      className: \"grid grid-cols-2 gap-8\",\r\n      items: [\r\n        {\r\n          id: \"image1\",\r\n          src: \"https://placehold.co/600x400\",\r\n          className: \"bg-muted rounded-md aspect-square\"\r\n        },\r\n        {\r\n          id: \"image2\",\r\n          src: \"https://placehold.co/600x400\",\r\n          className: \"bg-muted rounded-md row-span-2\"\r\n        },\r\n        {\r\n          id: \"image3\",\r\n          src: \"https://placehold.co/600x400\",\r\n          className: \"bg-muted rounded-md aspect-square\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n} as const;\r\n\r\ntype HeroSplitWithGalleryProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>;\r\n\r\nexport const HeroSplitWithGallery = (props: HeroSplitWithGalleryProps) => {\r\n  const { badge, title, description, buttons, images } = {\r\n    ...content,\r\n    ...props,\r\n  };\r\n\r\n  return (\r\n  <section className=\"w-full py-16 lg:py-32\">\r\n    <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 items-center gap-8\">\r\n        <div className=\"flex gap-4 flex-col\">\r\n          {badge &&\r\n          <div className=\"flex justify-center\">\r\n            <Badge variant=\"outline\">{badge.text}</Badge>\r\n          </div>\r\n          }\r\n          <div className=\"flex gap-4 flex-col\">\r\n            <h2 className=\"max-w-2xl text-3xl md:text-4xl lg:text-5xl font-bold\">\r\n                {title}\r\n            </h2>\r\n            <p className=\"text-base text-muted-foreground max-w-2xl\">\r\n              {description}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col md:flex-row gap-4\">\r\n            {buttons?.map((button) => (\r\n              <Button key={button.id} size={button.size} className={button.className} variant={button.variant}>\r\n                {button.text} {button.icon}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-8\">\r\n          {images.grid.items?.map((image) => (\r\n            <div key={image.id} className={image.className}></div>\r\n          ))}\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};"
    },
    {
      "name": "HeroCenteredWithTopButton",
      "path": "src\\blocks\\hero\\HeroCenteredWithTopButton.tsx",
      "dependencies": {
        "imports": [],
        "packages": [
          "lucide-react",
          "@/components/ui/button"
        ]
      },
      "content": {
        "badge": {
          "text": "Let's Go to Buildy/UI"
        },
        "title": "Effortless Prototyping",
        "description": "Streamline your development process with our flexible UI library. Experience effortless prototyping and create custom, responsive designs quickly and efficiently.",
        "buttons": [
          {
            "id": "btn1",
            "text": "Learn More",
            "variant": "default",
            "size": "lg",
            "className": "flex justify-center gap-4",
            "icon": {
              "type": "Component",
              "name": "Info"
            }
          },
          {
            "id": "btn2",
            "text": "Get Started",
            "variant": "outline",
            "size": "lg",
            "className": "flex justify-center gap-4",
            "icon": {
              "type": "Component",
              "name": "Rocket"
            }
          }
        ]
      },
      "sourceCode": "import { Info, Rocket, MoveRight } from \"lucide-react\";\r\nimport { Button, type ButtonProps } from \"@/components/ui/button\";\r\n\r\ntype Content = {\r\n  badge?: {\r\n    text: string;\r\n  };\r\n  title: string;\r\n  description: string;\r\n  buttons?: (ButtonProps & {\r\n    id: string;\r\n    text: string;\r\n    icon?: React.ReactNode;\r\n  })[];\r\n};\r\n\r\nconst content: Content = {\r\n  badge: {\r\n    text: \"Let's Go to Buildy/UI\"\r\n  },\r\n  title: \"Effortless Prototyping\",\r\n  description: \"Streamline your development process with our flexible UI library. Experience effortless prototyping and create custom, responsive designs quickly and efficiently.\",\r\n  buttons: [\r\n    {\r\n      id: \"btn1\",\r\n      text: \"Learn More\",\r\n      variant: \"default\",\r\n      size: \"lg\",\r\n      className: \"flex justify-center gap-4\",\r\n      icon: <Info />\r\n    },\r\n    {\r\n      id: \"btn2\",\r\n      text: \"Get Started\",\r\n      variant: \"outline\",\r\n      size: \"lg\",\r\n      className: \"flex justify-center gap-4\",\r\n      icon: <Rocket />\r\n    }\r\n  ]\r\n} as const;\r\n\r\ntype HeroCenteredWithTopButtonProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>;\r\n\r\nexport const HeroCenteredWithTopButton = (props: HeroCenteredWithTopButtonProps) => {\r\n  const { badge, title, description, buttons } = {\r\n    ...content,\r\n    ...props\r\n  };\r\n\r\n  return (\r\n    <section className=\"w-full py-16 lg:py-32\">\r\n      <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col text-center gap-8 items-center\">\r\n          <div>\r\n            <Button size=\"sm\" variant=\"outline\" className=\"rounded-full h-7\">\r\n              {badge?.text} <MoveRight />\r\n            </Button>\r\n          </div>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <h2 className=\"max-w-2xl text-3xl md:text-4xl lg:text-5xl font-bold\">\r\n              {title}\r\n            </h2>\r\n            <p className=\"text-base text-muted-foreground max-w-2xl\">\r\n              {description}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col md:flex-row gap-8\">\r\n            {buttons?.map((button) => (\r\n              <Button key={button.id} className={button.className} variant={button.variant} size={button.size}>\r\n                {button.text} {button.icon}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};"
    },
    {
      "name": "HeroCenteredSection",
      "path": "src\\blocks\\hero\\HeroCenteredSection.tsx",
      "dependencies": {
        "imports": [],
        "packages": [
          "lucide-react",
          "@/components/ui/badge",
          "@/components/ui/button"
        ]
      },
      "content": {
        "badge": {
          "text": "Start Now"
        },
        "title": "Explore Our BuildY!",
        "description": "Simplify your business operations with our cutting-edge solution. Say goodbye to time-consuming manual processes and hello to efficient, streamlined management.",
        "buttons": [
          {
            "id": "btn1",
            "text": "Learn More",
            "variant": "default",
            "size": "lg",
            "className": "flex justify-center gap-4",
            "icon": {
              "type": "Component",
              "name": "Info"
            }
          },
          {
            "id": "btn2",
            "text": "Get Started",
            "variant": "outline",
            "size": "lg",
            "className": "flex justify-center gap-4",
            "icon": {
              "type": "Component",
              "name": "Rocket"
            }
          }
        ]
      },
      "sourceCode": "import { Info, Rocket } from \"lucide-react\";\r\nimport { Badge, type BadgeProps } from \"@/components/ui/badge\";\r\nimport { Button, type ButtonProps } from \"@/components/ui/button\";\r\n\r\ntype Content = {\r\n  badge?: BadgeProps & {\r\n    text: string;\r\n  };\r\n  title: string;\r\n  description: string;\r\n  buttons?: (ButtonProps & {\r\n    id: string;\r\n    text: string;\r\n    icon?: React.ReactNode;\r\n  })[];\r\n};\r\n\r\nconst content: Content = {\r\n  badge: {\r\n    text: \"Start Now\"\r\n  },\r\n  title: \"Explore Our BuildY!\",\r\n  description: \"Simplify your business operations with our cutting-edge solution. Say goodbye to time-consuming manual processes and hello to efficient, streamlined management.\",\r\n  buttons: [\r\n    {\r\n      id: \"btn1\",\r\n      text: \"Learn More\",\r\n      variant: \"default\",\r\n      size: \"lg\",\r\n      className: \"flex justify-center gap-4\",\r\n      icon: <Info />\r\n    },\r\n    {\r\n      id: \"btn2\",\r\n      text: \"Get Started\",\r\n      variant: \"outline\",\r\n      size: \"lg\",\r\n      className: \"flex justify-center gap-4\",\r\n      icon: <Rocket />\r\n    }\r\n  ]\r\n} as const;\r\n\r\ntype HeroCenteredSectionProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>;\r\n\r\nexport const HeroCenteredSection = (props: HeroCenteredSectionProps) => {\r\n  const { badge, title, description, buttons } = {\r\n    ...content,\r\n    ...props\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"w-full py-16 lg:py-32\">\r\n        <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n          <div className=\"flex flex-col text-center gap-8 items-center\">\r\n            {badge &&\r\n            <div className=\"flex justify-center\">\r\n              <Badge className=\"rounded-full\">{badge.text}</Badge>\r\n            </div>\r\n            }\r\n            <div className=\"flex flex-col gap-4\">\r\n              <h2 className=\"max-w-2xl text-3xl md:text-4xl lg:text-6xl font-bold\">\r\n                {title}\r\n              </h2>\r\n              <p className=\"text-lg text-muted-foreground max-w-2xl\">\r\n                {description}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex flex-col md:flex-row gap-8\">\r\n              {buttons?.map((button) => (\r\n                <Button\r\n                  key={button.id}\r\n                  className={button.className}\r\n                  variant={button.variant}\r\n                  size={button.size}\r\n                >\r\n                  {button.text} {button.icon}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};"
    }
  ],
  "generated": "2024-12-29T11:55:39.965Z"
}