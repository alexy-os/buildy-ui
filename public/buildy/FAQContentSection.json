{
  "name": "FAQContentSection",
  "type": "registry:block",
  "files": [
    {
      "path": "src/blocks/features/FAQContentSection.tsx",
      "content": "import { Send } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\";\r\nimport { Button, type ButtonProps } from \"@/components/ui/button\";\r\n\r\ntype Content = {\r\n  badge: string;\r\n  title: string;\r\n  description: string;\r\n  button: {\r\n    text: string;\r\n    variant: ButtonProps[\"variant\"];\r\n    icon: React.ReactNode;\r\n  };\r\n  faqs: {\r\n    id: string;\r\n    question: string;\r\n    answer: string;\r\n  }[];\r\n};\r\n\r\nconst content: Content = {\r\n  badge: \"FAQ\",\r\n  title: \"Why Choose shadcn/ui?\",\r\n  description:\r\n    \"Discover the reasons why shadcn/ui is the ideal choice for modern, flexible, and accessible UI components, empowering developers to build faster and smarter.\",\r\n  button: {\r\n    text: \"Any questions?\",\r\n    variant: \"default\",\r\n    icon: <Send className=\"w-4 h-4\" />\r\n  },\r\n  faqs: [\r\n    {\r\n      id: \"faq1\",\r\n      question: \"What makes shadcn/ui unique?\",\r\n      answer:\r\n        \"shadcn/ui leverages the power of Radix UI and Tailwind CSS to provide accessible, customizable, and modular components for rapid development.\",\r\n    },\r\n    {\r\n      id: \"faq2\",\r\n      question: \"Is shadcn/ui suitable for production?\",\r\n      answer:\r\n        \"Absolutely. With a focus on accessibility, performance, and customization, shadcn/ui is designed for production-ready applications.\",\r\n    },\r\n    {\r\n      id: \"faq3\",\r\n      question: \"How does it integrate with Tailwind CSS?\",\r\n      answer:\r\n        \"shadcn/ui components come with pre-built Tailwind CSS classes, making customization and theming effortless for developers.\",\r\n    },\r\n    {\r\n      id: \"faq4\",\r\n      question: \"Is it open source?\",\r\n      answer:\r\n        \"Yes! shadcn/ui is completely open source, offering developers the freedom to use and adapt components in any project.\",\r\n    },\r\n    {\r\n      id: \"faq5\",\r\n      question: \"What kind of support is available?\",\r\n      answer:\r\n        \"shadcn/ui has comprehensive documentation and an active community to assist developers with any challenges.\",\r\n    },\r\n  ],\r\n} as const;\r\n\r\ntype FAQContentSectionProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>\r\n\r\nexport const FAQContentSection = (props: FAQContentSectionProps) => {\r\n  const { badge, title, description, button, faqs } = {\r\n    ...content,\r\n    ...props\r\n  }\r\n\r\n  return (\r\n    <section className=\"w-full py-16 lg:py-32\">\r\n      <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\r\n        <div className=\"grid lg:grid-cols-2 gap-10\">\r\n          <div className=\"flex flex-col gap-6\">\r\n            <header className=\"flex flex-col gap-4\">\r\n              <div>\r\n                <Badge variant=\"outline\">{badge}</Badge>\r\n              </div>\r\n              <h4 className=\"text-3xl md:text-4xl lg:text-6xl font-bold max-w-xl\">\r\n                {title}\r\n              </h4>\r\n              <p className=\"text-lg text-muted-foreground max-w-2xl\">\r\n                {description}\r\n              </p>\r\n            </header>\r\n            <Button variant={button.variant} className=\"gap-4 w-fit\">\r\n              {button.text} {button.icon}\r\n            </Button>\r\n          </div>\r\n          <Accordion type=\"single\" collapsible className=\"w-full\">\r\n            {faqs.map(({ id, question, answer }) => (\r\n              <AccordionItem key={id} value={id}>\r\n                <AccordionTrigger className=\"font-bold text-muted-foreground\">{question}</AccordionTrigger>\r\n                <AccordionContent>{answer}</AccordionContent>\r\n              </AccordionItem>\r\n            ))}\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};",
      "type": "registry:block",
      "target": "buildy/blocks/features/FAQContentSection.tsx"
    }
  ],
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  }
}