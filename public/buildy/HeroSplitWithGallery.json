{
  "name": "HeroSplitWithGallery",
  "type": "registry:block",
  "files": [
    {
      "path": "src/blocks/hero/HeroSplitWithGallery.tsx",
      "content": "import { cn } from \"@workspace/ui/lib/utils\"\nimport { BookOpen, Github } from \"lucide-react\";\nimport { Badge, type BadgeProps } from \"@workspace/ui/components/badge\";\nimport { Button, type ButtonProps } from \"@workspace/ui/components/button\";\nimport Link from \"next/link\";\n\nexport type HeroButtonProps = ButtonProps & {\n  id: string;\n  text: string;\n  icon?: React.ReactNode;\n  href?: string;\n  external?: boolean;\n};\n\ntype Content = {\n  badge?: BadgeProps & {\n    text: string;\n  };\n  title: string;\n  description: string;\n  buttons?: HeroButtonProps[];\n  images: {\n    grid: {\n      className: string;\n      items: Array<{\n        id: string;\n        src: string;\n        className: string;\n      }>;\n    };\n  };\n};\n\nconst content: Content = {\n  badge: {\n    text: \"We're building\",\n    variant: \"outline\",\n    className: \"text-sm font-medium\"\n  },\n  title: \"Build with shadcn ui components\",\n  description: \"Beautifully designed components built with Radix UI and Tailwind CSS. Open source and free to use in your applications.\",\n  buttons: [\n    {\n      id: \"button1\",\n      text: \"Documentation\",\n      variant: \"default\",\n      size: \"lg\",\n      className: \"items-center gap-2\",\n      icon: <BookOpen />\n    },\n    {\n      id: \"button2\",\n      text: \"GitHub\",\n      variant: \"outline\",\n      size: \"lg\",\n      className: \"items-center gap-2\",\n      icon: <Github />\n    }\n  ],\n  images: {\n    grid: {\n      className: \"grid grid-cols-2 gap-8\",\n      items: [\n        {\n          id: \"image1\",\n          src: \"https://placehold.co/600x400\",\n          className: \"bg-muted rounded-md aspect-square\"\n        },\n        {\n          id: \"image2\",\n          src: \"https://placehold.co/600x400\",\n          className: \"bg-muted rounded-md row-span-2\"\n        },\n        {\n          id: \"image3\",\n          src: \"https://placehold.co/320x320\",\n          className: \"bg-muted rounded-md aspect-square\"\n        }\n      ]\n    }\n  },\n} as const;\n\nconst HeroButton = ({ href, external, text, icon, ...buttonProps }: HeroButtonProps) => {\n  if (!href) {\n    return (\n      <Button {...buttonProps}>\n        {text} {icon}\n      </Button>\n    )\n  }\n\n  if (external) {\n    return (\n      <Button\n        asChild\n        {...buttonProps}\n      >\n        <a \n          href={href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {text} {icon}\n        </a>\n      </Button>\n    )\n  }\n\n  return (\n    <Button\n      asChild\n      {...buttonProps}\n    >\n      <Link href={href}>\n        {text} {icon}\n      </Link>\n    </Button>\n  )\n}\n\ntype HeroSplitWithGalleryProps = React.ComponentPropsWithoutRef<\"section\"> & Partial<Content>;\n\nexport const HeroSplitWithGallery = ({ \n  className,\n  ...sectionProps\n}: HeroSplitWithGalleryProps) => {\n  const {\n    badge,\n    title,\n    description,\n    buttons,\n    images\n  } = {\n    ...content,\n    ...sectionProps,\n  }\n\n  return (\n    <section \n      className={cn(\n        \"w-full py-16 lg:py-32\",\n        className\n      )}\n      {...sectionProps}\n    >\n      <div className=\"container mx-auto px-4 md:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 items-center gap-8\">\n          <div className=\"flex gap-4 flex-col\">\n            {badge && (\n              <div className=\"flex\">\n                <Badge variant={badge.variant} className={badge.className}>\n                  {badge.text}\n                </Badge>\n              </div>\n            )}\n            <div className=\"flex gap-4 flex-col\">\n              <h2 className=\"max-w-2xl text-3xl md:text-4xl lg:text-5xl font-bold\">\n                {title}\n              </h2>\n              <p className=\"text-base text-muted-foreground max-w-2xl\">\n                {description}\n              </p>\n            </div>\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              {buttons?.map((button) => (\n                <HeroButton \n                  key={button.id}\n                  {...button}\n                />\n              ))}\n            </div>\n          </div>\n          <div className={cn(\n            \"grid grid-cols-2 gap-8\",\n            images.grid.className\n          )}>\n            {images.grid.items?.map((image) => (\n              <div \n                key={image.id} \n                className={cn(\n                  \"relative overflow-hidden\",\n                  image.className\n                )}\n              >\n                <img \n                  src={image.src} \n                  alt={image.id} \n                  className={cn(\n                    \"w-full h-full object-cover\",\n                    image.className\n                  )} \n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}",
      "type": "registry:block",
      "target": "buildy/blocks/hero/HeroSplitWithGallery.tsx"
    }
  ],
  "dependencies": [
    "@workspace/ui/lib/utils",
    "lucide-react",
    "@workspace/ui/components/badge",
    "@workspace/ui/components/button",
    "next/link"
  ],
  "devDependencies": [],
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  }
}